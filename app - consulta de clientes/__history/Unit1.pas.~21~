unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Data.DB,
  FireDAC.Phys.MySQLDef, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MySQL,
  FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids,
  Vcl.DBGrids;

type
  TForm1 = class(TForm)
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    cbColuna: TComboBox;
    cbOperador: TComboBox;
    edValor: TEdit;
    Button1: TButton;
    DBGrid1: TDBGrid;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    DataSource1: TDataSource;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  nomeColuna, operador: string;
begin
  nomeColuna := cbColuna.Items[cbColuna.ItemIndex];
  operador := cbOperador.Items[cbOperador.ItemIndex];
  FDQuery1.Close;
  FDQuery1.MacroByName('NOMECOLUNA').AsIdentifier := nomeColuna;
  FDQuery1.MacroByName('OPERADOR').AsRaw := operador;
  if (nomeColuna = 'nome') or (nomeColuna = 'email') then
  begin
    if operador = 'LIKE' then
    begin
      FDQuery1.MacroByName('VALOR').AsString := edValor.Text + '%';
    end
    else
    begin
      FDQuery1.MacroByName('VALOR').AsString := edValor.Text;
    end;
  end
  else
  begin
    if nomeColuna = 'id' then
    begin
      FDQuery1.MacroByName('VALOR').AsInteger := StrToInt(edValor.Text);
    end
    else
    begin
      FDQuery1.MacroByName('VALOR').AsDate := StrToDate(edValor.Text);
    end;
  end;
  FDQuery1.Open;

end;
